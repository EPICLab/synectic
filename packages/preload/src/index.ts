/**
 * @module preload
 */

export {fileOpen, fileSave} from './dialogs';
export {flattenArray, flattenObject} from './flatten';
export {
  add,
  catFile,
  checkGitVersion,
  checkRefFormat,
  checkUnmergedBranch,
  checkUnmergedPath,
  checkoutBranch,
  checkoutDetached,
  checkoutNewBranch,
  checkoutPathspec,
  cloneRepo,
  commit,
  copyBranch,
  createBranch,
  deleteBranch,
  errorLogger,
  extractFromURL,
  extractRepoName,
  fetchMergingBranches,
  fileStatus,
  filterIgnore,
  getBranchRoot,
  getConfig,
  getCredentials,
  getIgnore,
  getMatchUp,
  getRemote,
  getRemoteConfig,
  getRoot,
  getWorktreePaths,
  isValidRepository,
  isValidRepositoryURL,
  listBranch,
  log,
  mergeBase,
  mergeBranch,
  mergeInProgress,
  moveBranch,
  processBranchOutput,
  processCatFileOutput,
  processLogOutput,
  processMergeBaseOutput,
  processMergeOutput,
  processRemoteOutput,
  processShowBranchOutput,
  processStatusCode,
  processWorktreeOutput,
  reset,
  resolveURL,
  restore,
  revList,
  revParse,
  revParseArgs,
  setConfig,
  setUpstreamBranch,
  showBranch,
  unsetUpstreamBranch,
  worktreeAdd,
  worktreeList,
  worktreeLock,
  worktreeMove,
  worktreePrune,
  worktreeRemove,
  worktreeRepair,
  worktreeStatus,
  worktreeUnlock,
  type Conflict,
  type GitConfig,
  type MergeAction,
  type WorktreePaths,
} from './git';
export {
  decompressBinaryObject,
  execute,
  extractDirname,
  extractExtension,
  extractFilename,
  extractStats,
  filterReadArray,
  getDescendantPaths,
  isDescendant,
  isDirectory,
  isEqualPaths,
  readDirAsync,
  readDirAsyncDepth,
  readFileAsync,
  replaceExt,
  validateFileName,
  writeFileAsync,
} from './io';
export {
  clipboard,
  cwd,
  dirname,
  join,
  normalize,
  openExternal,
  platform,
  relative,
  sep,
  sha256sum,
  uuid,
} from './platform';
export {
  asyncFilter,
  delay,
  deserialize,
  equalArrayBuffers,
  equalArrays,
  equalMaps,
  filterObject,
  filteredArrayEquality,
  filteredObjectEquality,
  getConflictingChunks,
  getRandomInt,
  hasUpdates,
  isDefined,
  isFilled,
  isModified,
  isNumber,
  isPresent,
  isStaged,
  isUnmerged,
  isWrappedQuote,
  objectEntries,
  objectifyPath,
  partition,
  removeDuplicates,
  removeNullableProperties,
  removeObjectProperty,
  removeUndefined,
  symmetrical,
  toArrayBuffer,
} from './utils';
export {versions} from './versions';
